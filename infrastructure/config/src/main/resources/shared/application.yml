# Server config
server:
  ## Should be included to show message, if not error message will be empty
  error:
    include-message: always
    include-binding-errors: always

# Custom config
app:
  security:
    jwt:
      user-name-attribute: preferred_username
  eureka:
    host: localhost
    port: 8761
    user: user
    pass: pass
  kafka:
    broker:
      host: localhost
      port: 9092
  rabbitmq:
    host: localhost
    port: 5672
  auth-server:
    host: localhost
    port: 8090
    realm: e-shop
  logstash:
    host: localhost
    port: 5044

# Spring
spring:
  # Kafka
  kafka:
    producer:
      bootstrap-servers: ${app.kafka.broker.host}:${app.kafka.broker.port}
    consumer:
      bootstrap-servers: ${app.kafka.broker.host}:${app.kafka.broker.port}
      auto-offset-reset: earliest
      topic:
        orders: orders
        orderCheckouts: order-checkouts
        productPriceChanges: product-price-changes
        paidOrders: paid-orders
        ordersWaitingForValidation: orders-waiting-for-validation
        orderStockStatuses: order-stock-statuses
        submittedOrders: submitted-orders
        shippedOrders: shipped-orders
        cancelledOrders: cancelled-orders
        gracePeriodConfirmed: grace-period-confirmed
        paymentStatus: payment-status
        stockConfirmed: stock-confirmed

  # Rabbit
  rabbitmq:
    host: ${app.rabbitmq.host}
    port: ${app.rabbitmq.port}
    username: guest
    password: guest

  cloud:
    # As Spring Cloud Ribbon is in maintenance mode.
    # It is recommended switching to BlockingLoadBalancerClient instead.
    loadbalancer.ribbon.enabled: false

    # Disable distributed tracing by default
  zipkin:
    enabled: false
  sleuth:
    enabled: false



# Service discovery
eureka:
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${random.int}
#    instance-id: ${spring.application.name}
    hostname: localhost
  client:
    fetch-registry: true
    serviceUrl:
      defaultZone: http://${app.eureka.user}:${app.eureka.pass}@${app.eureka.host}:${app.eureka.port}/eureka/
    healthcheck:
      enabled: true

# Management
#management:
#  endpoints:
#    web:
#      exposure:
#        include: "*"

# Logging
logging:
  level:
    org:
      springframework:
        web: DEBUG
        security: INFO
    web: INFO
    root: INFO

---
# Distributed tracing
spring:
  config:
    activate:
      on-profile: distributed-tracing

  sleuth:
    enabled: true
    traceId128: true
    sampler.probability: 1.0

  zipkin:
    enabled: true
    sender.type: rabbit



sample:
  zipkin:
    # When enabled=false, traces log to the console. Comment to send to zipkin
    enabled: false
